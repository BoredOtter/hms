apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: client
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-cluster-issuer"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://auth.hms.test.boredotter.dev/"
spec:
  tls:
    - hosts:
      - hms.test.boredotter.dev
      secretName: hms-test-tls
  rules:
  - host: hms.test.boredotter.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: client
            port:
              number: 8080
      - path: /api/
        pathType: Prefix
        backend:
          service:
            name: kraken
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-cluster-issuer"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://hms.test.boredotter.dev/"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
    - hosts:
      - auth.hms.test.boredotter.dev
      secretName: auth-hms-test-tls
  rules:
    - host: auth.hms.test.boredotter.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: keycloak
                port:
                  number: 8080